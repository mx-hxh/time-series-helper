# -*- coding: utf-8 -*-
"""time-series-helper-dev.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cvSNFI2XL7vX4kdSh-zOSq8tO6sqCy0p
"""

import pandas as pd
import numpy as np

def check_column_homo(df):
  """
  check each column of a dataframe to see if all of its columns are homogeneous (having same dtype across all elements)

  :param df: a dataframe type of dataset
  :return: a dataframe contains information about whether the input dataframe has homogeneous columns (if each coulmn has data of the same dtype)
           each row of the returned dataframe corresponds to a column of df
           column is_same_type: bool, whether each column in df is homogeneous
           column dtype_count: int, how many types of dtype are in each column of df, if one column in df is homogenous, the value in this column is 1
           column dtype_list: list, list all types of dtype are in each column of df, if one column in df is homogenous, the list contains 1 value
  """
  colNames = df.columns
  sameDtypeList = []
  dtypeCountList = []
  dtypeList = []
  for col in colNames:
    colDtypeCount = len(set(df[col].map(type))) #count the number of dtypes within one column of df
    if colDtypeCount == 1:
      sameDtype = True
    else:
      sameDtype = False
    dtypes = list(set(df[col].map(type))) #clist all dtypes within one column of df
    sameDtypeList.append(sameDtype)
    dtypeCountList.append(colDtypeCount)
    dtypeList.append(dtypes)
  data = {'is_same_dtype': sameDtypeList,
          'dtype_count': dtypeCountList,
          'dtype_list': dtypeList}
  return pd.DataFrame(data, index = colNames)